### YamlMime:ManagedReference
items:
- uid: DocFxForUnity.Player
  commentId: T:DocFxForUnity.Player
  id: Player
  parent: DocFxForUnity
  children:
  - DocFxForUnity.Player.IsGrounded
  - DocFxForUnity.Player.Move
  - DocFxForUnity.Player.Move(Vector3)
  - DocFxForUnity.Player.PlayerCount
  - DocFxForUnity.Player.Speed
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: DocFxForUnity.Player
  type: Class
  source:
    id: Player
    path: ''
    startLine: 86
  assemblies:
  - cs.temp.dll
  namespace: DocFxForUnity
  summary: "\nExample player class.\n"
  example: []
  syntax:
    content: 'public class Player : MonoBehaviour'
    content.vb: Public Class Player Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: DocFxForUnity.Player.PlayerCount
  commentId: F:DocFxForUnity.Player.PlayerCount
  id: PlayerCount
  parent: DocFxForUnity.Player
  langs:
  - csharp
  - vb
  name: PlayerCount
  nameWithType: Player.PlayerCount
  fullName: DocFxForUnity.Player.PlayerCount
  type: Field
  source:
    id: PlayerCount
    path: ''
    startLine: 96
  assemblies:
  - cs.temp.dll
  namespace: DocFxForUnity
  summary: "\nExample public static int variable for player count.\n"
  example: []
  syntax:
    content: public static int PlayerCount
    return:
      type: System.Int32
    content.vb: Public Shared PlayerCount As Integer
- uid: DocFxForUnity.Player.Speed
  commentId: P:DocFxForUnity.Player.Speed
  id: Speed
  parent: DocFxForUnity.Player
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: Player.Speed
  fullName: DocFxForUnity.Player.Speed
  type: Property
  source:
    id: Speed
    path: ''
    startLine: 101
  assemblies:
  - cs.temp.dll
  namespace: DocFxForUnity
  summary: "\nExample public getter for speed.\n"
  example: []
  syntax:
    content: public int Speed { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Speed As Integer
  overload: DocFxForUnity.Player.Speed*
- uid: DocFxForUnity.Player.Move
  commentId: M:DocFxForUnity.Player.Move
  id: Move
  parent: DocFxForUnity.Player
  langs:
  - csharp
  - vb
  name: Move()
  nameWithType: Player.Move()
  fullName: DocFxForUnity.Player.Move()
  type: Method
  source:
    id: Move
    path: ''
    startLine: 107
  assemblies:
  - cs.temp.dll
  namespace: DocFxForUnity
  summary: "\nExample public method for moving the player.\n"
  example: []
  syntax:
    content: public void Move()
    content.vb: Public Sub Move()
  overload: DocFxForUnity.Player.Move*
- uid: DocFxForUnity.Player.Move(Vector3)
  commentId: M:DocFxForUnity.Player.Move(Vector3)
  id: Move(Vector3)
  parent: DocFxForUnity.Player
  langs:
  - csharp
  - vb
  name: Move(Vector3)
  nameWithType: Player.Move(Vector3)
  fullName: DocFxForUnity.Player.Move(Vector3)
  type: Method
  source:
    id: Move
    path: ''
    startLine: 117
  assemblies:
  - cs.temp.dll
  namespace: DocFxForUnity
  summary: "\nExample public method for moving the player to a direction.\n"
  example: []
  syntax:
    content: public void Move(Vector3 direction)
    parameters:
    - id: direction
      type: Global.Vector3
      description: Direction to move to.
    content.vb: Public Sub Move(direction As Vector3)
  overload: DocFxForUnity.Player.Move*
- uid: DocFxForUnity.Player.IsGrounded
  commentId: M:DocFxForUnity.Player.IsGrounded
  id: IsGrounded
  parent: DocFxForUnity.Player
  langs:
  - csharp
  - vb
  name: IsGrounded()
  nameWithType: Player.IsGrounded()
  fullName: DocFxForUnity.Player.IsGrounded()
  type: Method
  source:
    id: IsGrounded
    path: ''
    startLine: 127
  assemblies:
  - cs.temp.dll
  namespace: DocFxForUnity
  summary: "\nChecks if the player is grounded.\n"
  example: []
  syntax:
    content: public bool IsGrounded()
    return:
      type: System.Boolean
      description: true if player is grounded
    content.vb: Public Function IsGrounded() As Boolean
  overload: DocFxForUnity.Player.IsGrounded*
references:
- uid: DocFxForUnity
  commentId: N:DocFxForUnity
  name: DocFxForUnity
  nameWithType: DocFxForUnity
  fullName: DocFxForUnity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DocFxForUnity.Player.Speed*
  commentId: Overload:DocFxForUnity.Player.Speed
  name: Speed
  nameWithType: Player.Speed
  fullName: DocFxForUnity.Player.Speed
- uid: DocFxForUnity.Player.Move*
  commentId: Overload:DocFxForUnity.Player.Move
  name: Move
  nameWithType: Player.Move
  fullName: DocFxForUnity.Player.Move
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: DocFxForUnity.Player.IsGrounded*
  commentId: Overload:DocFxForUnity.Player.IsGrounded
  name: IsGrounded
  nameWithType: Player.IsGrounded
  fullName: DocFxForUnity.Player.IsGrounded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
